[package]
name = "vefas-gateway"
version = "0.1.0"
edition.workspace = true
license.workspace = true
description = "Production-grade HTTP gateway for VEFAS zkTLS verification"

[[bin]]
name = "vefas-gateway"
path = "src/main.rs"

[dependencies]
# Internal dependencies
vefas-core = { path = "../vefas-core" }
vefas-types = { path = "../vefas-types" }
vefas-crypto = { path = "../vefas-crypto" }
vefas-crypto-native = { path = "../vefas-crypto-native" }

# zkVM implementations
vefas-sp1 = { path = "../vefas-sp1", optional = true }
vefas-risc0 = { path = "../vefas-risc0", optional = true, default-features = false }

# HTTP server
axum = { version = "0.8", features = ["http2", "macros", "tracing"] }
tower = { version = "0.5", features = ["timeout", "limit", "load-shed", "steer"] }
tower-http = { version = "0.6", features = ["cors", "trace", "compression-br", "request-id", "limit"] }

# Async runtime
tokio.workspace = true
futures.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true

# Error handling
thiserror.workspace = true
anyhow = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# UUID for session IDs
uuid = { version = "1.0", features = ["v4", "serde"] }

# Base64 encoding/decoding
base64 = "0.22"

# HTTP client for health checks
reqwest = { version = "0.12", features = ["json"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# URL parsing
url = "2.4"

# Hex encoding
hex = "0.4"

# Binary serialization
bincode.workspace = true

# Cryptography
sha2 = "0.10"

# TLS processing
rustls = { version = "0.23", features = ["std"] }

[dev-dependencies]
# Testing
rstest.workspace = true
tokio-test = "0.4"
tower-test = "0.4"

[features]
default = ["sp1", "risc0"]
sp1 = ["vefas-sp1"]
risc0 = ["vefas-risc0"]
cuda = ["vefas-risc0/cuda"]  # Enable CUDA acceleration for RISC0